receivers:
  otlp:
    protocols:
      grpc:
        endpoint: collector:4317
      http:
        endpoint: collector:4318

processors:
  batch:
  filter/healthcheck:
    traces:
        span:
          - 'attributes["http.target"] == "/healthcheck"'
  redaction/creditcard:
    allow_all_keys: true
    blocked_values:
      - "4[0-9]{12}(?:[0-9]{3})?" ## Visa credit card number
      - "(5[1-5][0-9]{14})"       ## MasterCard number
  attributes/environment:
    actions:
      - key: environment
        value: development
        action: upsert
  tail_sampling:
    decision_wait: 10s
    num_traces: 100
    expected_new_traces_per_sec: 10
    policies:
      [
        {
          name: sample-by-latency,
          type: latency,
          latency: {threshold_ms: 100}
        },
        {
          name: healthcheck-sampling,
          type: and,
          and: {
            and_sub_policy: 
            [
              {
                name: healthcheck-route,
                type: string_attribute,
                string_attribute:
                  {
                    key: http.route,
                    values: [/health],
                  },
              },
              {
                name: sample-by-probability,
                type: probabilistic,
                probabilistic: {sampling_percentage: 10}
              }
            ]
          }
        },
      ]

exporters:
  logging:
  otlp:
    endpoint: "jaeger:4317"
    tls:
        insecure: true
  otlp/honeycomb:
    endpoint: api.honeycomb.io:443
    headers:
      x-honeycomb-team: $HONEYCOMB_API_KEY

  clickhouse:
    endpoint: tcp://clickhouse:9000?dial_timeout=10s&compress=lz4
    database: otel
    ttl_days: 3
    logs_table_name: otel_logs
    traces_table_name: otel_traces
    metrics_table_name: otel_metrics
    timeout: 5s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  otlphttp/metrics:
    endpoint: "http://prometheus:9090/api/v1/otlp"
    tls:
        insecure: true

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: 
        - batch
        - tail_sampling
        - filter/healthcheck
        - attributes/environment
      exporters: 
        - otlp
        - logging
        - otlp/honeycomb
        - clickhouse
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: 
        - logging
        - otlphttp/metrics
        - otlp/honeycomb
        - clickhouse
